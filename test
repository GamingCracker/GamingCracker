local plr = game.Players.LocalPlayer
local lastPos = plr.Character.PrimaryPart.CFrame

local function toggleFunction()
    -- Your function code here
    plr.Character:SetPrimaryPartCFrame(game.ReplicatedStorage.ViewportNPCs.Eren.PrimaryPart.CFrame * CFrame.new(0,10,0))

    while task.wait() do
        pcall(function()
            for i, v in pairs(workspace.ReplicatedChunks:GetDescendants()) do
                if v.Name == "Clown Pirate" then
                    local enemy = v
                    lastPos = enemy.PrimaryPart.CFrame
                    repeat task.wait()
                        local char = plr.Character

                        char:SetPrimaryPartCFrame(enemy.PrimaryPart.CFrame * CFrame.new(0,-10,0))
                        local args = {
                            [1] = game:GetService("Players").LocalPlayer.Character.Punch,
                            [2] = enemy
                        }

                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Melee"):FireServer(unpack(args))

                    until enemy.Humanoid.Health <=0 or not enemy
                end
            end
            plr.Character:SetPrimaryPartCFrame(lastPos * CFrame.new(0,10,0))
        end)
    end
end

-- Create a ScreenGui within the CoreGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.CoreGui

-- Create a TextButton within the ScreenGui
local textButton = Instance.new("TextButton")
textButton.Parent = screenGui
textButton.Text = "Toggle Function"
textButton.Position = UDim2.new(0.5, 0, 0.5, 0)
textButton.AnchorPoint = Vector2.new(0.5, 0.5)

-- Set up a variable to track whether the function is active or not
local functionActive = false

-- Connect the TextButton's MouseButton1Click event to toggle the function on and off
textButton.MouseButton1Click:Connect(function()
    functionActive = not functionActive
    if functionActive then
        toggleFunction()
    end
end)
