local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()

local Window = OrionLib:MakeWindow({Name = "Furius Hub", HidePremium = false, IntroText = "Furius Hub", SaveConfig = true, ConfigFolder = "FuriusConfig"})


local Tab = Window:MakeTab({
	Name = "Auto Farm",
	Icon = "rbxassetid://13268172705",
	PremiumOnly = false
})

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local bosses = {
    ["Higuma"] = Vector3.new(1927, 30, 5515),
    ["Captain Axe"] = Vector3.new(2045, 84, 2552),
    ["Boggy"] = Vector3.new(-5099, 27, 4348),
    ["Koriu"] = Vector3.new(-1995, 47, 6371),
    ["Sharkman"] = Vector3.new(-1791, 45, 1978),
    ["Captain Smoke"] = Vector3.new(-1791, 45, 1978)
}

local selectedBoss

local function attackNPC(npcName)
    for i, v in pairs(workspace.ReplicatedChunks:GetDescendants()) do
        if v.Name == npcName then
            local enemy = v
            
            -- calculate the NPC's forward vector
            local forwardVector = enemy.PrimaryPart.CFrame.LookVector
            
            -- calculate the position behind the NPC
            local behindPosition = enemy.PrimaryPart.Position - forwardVector * 10
            
            -- teleport the player behind the NPC
            character:SetPrimaryPartCFrame(CFrame.new(behindPosition))
            
            -- check if the Punch tool is equipped
            local punchTool = player.Character:FindFirstChild("Punch")
            if not punchTool then
                -- equip the Punch tool
                punchTool = player.Backpack:FindFirstChild("Punch")
                if punchTool then
                    punchTool.Parent = player.Character
                end
            end
            
            local args = {
                [1] = game:GetService("Players").LocalPlayer.Character.Punch,
                [2] = enemy
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Melee"):FireServer(unpack(args))
            
            -- check if the enemy's health is zero or below
            if enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health <= 0 then
                -- teleport the player to the specified position
                local targetPosition = bosses[npcName]
                character:MoveTo(targetPosition)
            end
        end
    end
end

Tab:AddDropdown({
	Name = "Select Boss",
	Default = "",
	Options = {"", "Higuma", "Captain Axe", "Boggy", "Koriu", "Sharkman", "Captain Smoke"},
	Callback = function(Value)
		selectedBoss = Value
	end    
})

Tab:AddToggle({
    Name = "Play Auto Farm Boss",
    Default = false,
    Callback = function(Value)
        noclip = Value
        
        -- execute verification code when auto farm is enabled
        if Value then
            local args = {
                [1] = "IronWill"
            }
            game:GetService("ReplicatedStorage").Remotes.Server:FireServer(unpack(args))
        end
        
        if Value and selectedBoss then
            while Value do
                attackNPC(selectedBoss)
                wait(0.00001) -- adjust this value for faster attacks
            end
        end
    end
})

local Tab = Window:MakeTab({
	Name = "Teleport",
	Icon = "rbxassetid://13461004575",
	PremiumOnly = false
})


local locations = {
    ["Pirate Island"] = {position = Vector3.new(1986, 29, 5454), spawnName = "PirateIsland"},
    ["Sailor Town"] = {position = Vector3.new(2029, 85, 2552), spawnName = "SailorTown"},
    ["Pepper Town"] = {position = Vector3.new(-5126, 27, 4319), spawnName = "PepperTown"},
    ["Maple Village"] = {position = Vector3.new(-2005,47, 6353), spawnName = "MapleVillage"},
    ["Fishman Park"] = {position = Vector3.new(-1808, 15 -1685), spawnName = "FishmanPark"},
    ["Traveler Town"] = {position = Vector3.new(-2289, 31, 2143), spawnName = "TravelerTown"},
    ["Wreck Rock"] = {position = Vector3.new(-283, 234, 4148)}
}

local selectedLocation

Tab:AddDropdown({
    Name = "Locations",
    Options = {"Pirate Island", "Sailor Town", "Pepper Town", "Maple Village", "Fishman Park", "Traveler Town", "Wreck Rock"},
    Callback = function(Value)
        selectedLocation = Value
    end
})

Tab:AddButton({
    Name = "Teleport",
    Callback = function()
        if selectedLocation then
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local targetPosition = locations[selectedLocation].position
            character:MoveTo(targetPosition)
            
            local spawnName = locations[selectedLocation].spawnName
            if spawnName then
                local args = {
                    [1] = "Spawn",
                    [2] = spawnName
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Server"):FireServer(unpack(args))
            end
        end
    end
})



local Tab = Window:MakeTab({
	Name = "Config",
	Icon = "rbxassetid://13268217805",
	PremiumOnly = false
})

Tab:AddButton({
    Name = "Anti Afk",
    Callback = function()
        local VirtualUser=game:service'VirtualUser'
        game:service'Players'.LocalPlayer.Idled:connect(function()
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end)
    end
})

local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera

Tab:AddToggle({
    Name = "Toggle Zoom",
    Default = false,
    Callback = function(Value)
        if Value then
            player.CameraMaxZoomDistance = math.huge
            camera.FieldOfView = 70
        else
            player.CameraMaxZoomDistance = 400
            camera.FieldOfView = 70
        end
    end
})

Tab:AddToggle({
    Name = "Toggle Sky and Fog",
    Default = false,
    Callback = function(Value)
        if Value then
            game.Lighting.FogEnd = math.huge
            game.Lighting.Sky:Destroy()
        else
            game.Lighting.FogEnd = 1000
            local sky = Instance.new("Sky", game.Lighting)
        end
    end
})

local Tab = Window:MakeTab({
	Name = "Status|Esp",
	Icon = "rbxassetid://13268193454",
	PremiumOnly = false
})


local Section = Tab:AddSection({
	Name = "Auto Status"
})


local autoStatsSword = false
local autoStatsFruit = false
local autoStatsDefense = false
local autoStatsMelee = false

Tab:AddToggle({
	Name = "Auto Fruit",
	Default = false,
	Callback = function(Value)
		autoStatsFruit = Value
	end    
})

Tab:AddToggle({
	Name = "Auto Defense",
	Default = false,
	Callback = function(Value)
		autoStatsDefense = Value
	end    
})

Tab:AddToggle({
	Name = "Auto Melee",
	Default = false,
	Callback = function(Value)
		autoStatsMelee = Value
	end    
})

Tab:AddToggle({
	Name = "Auto Sword",
	Default = false,
	Callback = function(Value)
		autoStatsFruit = Value
	end    
})

local function autoStat(statName)
	while wait(1) do
		if statName == "Fruit" and autoStatsFruit then
			local args = {
				[1] = "Fruit",
				[2] = 1
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AddStat"):FireServer(unpack(args))
		elseif statName == "Defense" and autoStatsDefense then
			local args = {
				[1] = "Defense",
				[2] = 1
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AddStat"):FireServer(unpack(args))
		elseif statName == "Defense" and autoStatsDefense then
			local args = {
				[1] = "Sword",
				[2] = 1
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AddStat"):FireServer(unpack(args))
		elseif statName == "Melee" and autoStatsMelee then
			local args = {
				[1] = "Melee",
				[2] = 1
			}
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("AddStat"):FireServer(unpack(args))
		end
	end
end

coroutine.wrap(autoStat)("Fruit")
coroutine.wrap(autoStat)("Defense")
coroutine.wrap(autoStat)("Sword")
coroutine.wrap(autoStat)("Melee")

Tab:AddDropdown({
	Name = "Dropdown",
	Default = "1",
	Options = {"1", "2"},
	Callback = function(Value)
		print(Value)
	end    
})
